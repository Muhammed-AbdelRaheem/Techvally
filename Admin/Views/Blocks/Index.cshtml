

@model BlockDataTable

<div class="content-wrapper">
    <div class="page-title">
        <span class="title-data" data-main='@(ViewData["Main"])'>@ViewData["Title"]</span>
    </div>
    <div class="card main-card w-100">

        <div class="card-body">
          
 
 <a asp-action="Create"  asp-route-blockType="@ViewData["BlockType"]"class="btn my_btn btn-clean btn-primary btn-sm">
                                          <i class="fa fa-plus"></i> Create New</a><div class="table-fix scroll-x">
                            
                    @Html.AntiForgeryToken()

                <jquery-datatables id="Block"
                                   class=" table table-striped table-bordered "
                                   model="@Model"
                                   thead-class="text-center"
                                   enable-searching="true"
                                   search-row-th-class="p-0"
                                   search-input-class="form-control form-control-sm"
                                   search-input-style=""
                                   search-input-placeholder-prefix="Search">
                </jquery-datatables>
            </div>
        </div>
    </div>

</div>
@section Scripts {
    <script>
             const controller = '@ViewContext.RouteData.Values["controller"]';
        const blockType = '@ViewData["BlockType"]';

        $(() => {

            function loadFinish(data) {
                $(".reload_table i").removeClass("fa-spin")
            }
            $.fn.dataTable.ext.buttons.reload = {
                text: 'Reload',
                action: function (e, dt, node, config) {
                    console.log(dt);
                    $(".reload_table i").addClass("fa-spin")
                    dt.ajax.reload(loadFinish);

                }
            };

            var template = "<'d-flex justify-content-between align-items-center my-dt-header 'Bf<'btn-clean'>>" +
                "<'overflow-x slim-scroll-w'tr>" +
                "<'d-flex justify-content-between align-items-center my-dt-footer'lpi>";

            if ($('#Block').length !== 0) {

                var table = $('#Block').DataTable({
                    language: {
                        processing: "@_localizer["Loading Data..."]",
                        zeroRecords: "@_localizer["No matching records found"]"
                    },
                    processing: true,
                    serverSide: true,
                    orderCellsTop: true,
                    searching: true,
                    autoWidth: false,
                    deferRender: true,
                    lengthMenu: [10, 50, 100, 1000],
                    order: [[0, "desc"]],
                    buttons: [
                        { extend: 'reload', className: 'btn my_btn btn-sm reload_table', exportOptions: { columns: [$('thead th:not(.noexport):not(:empty)')] }, text: '<i class="fa fa-refresh"></i>' },
                        {
                            extend: 'excelHtml5', footer: true, filename: 'users', className: 'btn my_btn btn-sm', exportOptions: { columns: [$('thead th:not(.noexport):not(:empty)')] }, text: '@_localizer["excel"]',
                            action: function (e, dt, node, config) {
                                window.location.href = "/Blocks/BlockExcel";
                            },
                            init: function (api, node, config) {
                                $(node).removeClass('dt-button');
                            }

                        },
                        {
                            extend: 'print', footer: true, className: 'btn my_btn btn-sm',
                            exportOptions: {
                                columns: [$('thead th:not(.noexport):not(:empty)')],
                                modifier: {
                                    page: 'current'
                                },
                            },
                            text: '@_localizer["print"]',
                            action: function (e, dt, node, config) {
                                $.ajax({
                                    type: "POST",
                                    url: "/Blocks/BlockPrintTable",

                                    success: function (data) {
                                        newPrintBody(data)
                                    }
                                });
                            },
                            init: function (api, node, config) {
                                $(node).removeClass('dt-button');
                            }
                        }
                    ],
                    dom: template,
                    ajax: {
                        type: "POST",
                        url: '/Blocks/BlockLoadTable',
                        contentType: "application/json; charset=utf-8",
                        async: true,
                        headers: {
                            "XSRF-TOKEN": document.querySelector('[name="__RequestVerificationToken"]').value
                        },
                        data: function (data) {
                            let additionalValues = [];
                            data.AdditionalValues = additionalValues;
                            return JSON.stringify(data);
                        }
                    },
                    columns: [
                        {
                            data: "Id",
                            title: "@_localizer["Action"]",
                            render: function (data, type, row) {
                                return `
                                         <div class="dropdown data-table-dropdown">
                                         <button class="btn btn-secondary my_btn btn-sm" data-toggle="dropdown">
                                             <i class="fa fa-cog" aria-hidden="true"></i> Action
                                         </button>
                                         <div class="dropdown-menu dropdown-menu-right">
                <a class="dropdown-item text-dark" href="/${controller}/Edit?blockType=${blockType}&id=${data}">Edit</a>
                <a class="dropdown-item" onclick='DeleteRow("/${controller}/JsonDelete?blockType=${blockType}&id=${data}")'>Delete</a>
                                                

                                                 </div>
                                                     </div>`
                                       },
                            name: "co"
                        },

                        {
                            data: "Title",
                            name: "co",
                            searchable: true,
                            title: "Name",

                        },
                       
                        {
                            data: "Picture",
                            title: "Picture",
                            render: function (data, type, row)
                            {
                                if (data)
                                    return `<img src='${data}?h=100&w=100&autorotate=true&mode=pad&bgcolor=white&format=jpg' class='img-fluid' />`



                                else
                                    return null;
                            },
                            name: "co"
                        },

                        {
                            data: "DisplayOrder",
                            searchable: false,
                            name: "eq",
                            title: "Display Order",
                        },
                        {
                            data: "Hidden",
                            searchable: false,
                            name: "eq",
                            title: "Hidden",
                            render: function (data, type, row) {
                                if (data)
                                    return ` <input checked="checked" class="check-box" disabled="disabled" type="checkbox">`

                                else
                                    return ` <input  class="check-box" disabled="disabled" type="checkbox">`
                            }
                        },
                        {
                            data: "CreatedOnUtc",
                            searchable: false,
                            name: "eq",
                            title: "Created At",


                                render: function (data) {
                                return data ? data.split('.')[0] : "";
                        }
                        },
                        {
                            data: "UpdatedOnUtc",
                            searchable: false,
                            name: "eq",
                            title: "Updated At",


                                render: function (data) {
                                return data ? data.split('.')[0] : "";
                        }
                        },

                    ]
                });

                table.columns().every(function (index) {
                    $('#log thead tr:last th:eq(' + index + ') input')
                        .on('keyup',
                            function (e) {
                                if (e.keyCode === 13) {
                                    table.column($(this).parent().index() + ':visible').search(this.value).draw();
                                }
                            });
                    $('#log thead tr:last th:eq(' + index + ') input')
                        .on('blur',
                            function () {
                                table.column($(this).parent().index() + ':visible').search(this.value).draw();
                            });
                    if ($(".btn.my_btn.btn-clean").length > 0) {
                        $("div.btn-clean").html($(".btn.my_btn.btn-clean"));
                    }
                });


            }
        });

    </script>
}
