@model UserTableViewModel

@{
    ViewData["Title"] = _localizer["System Users"];
}
<div class="content-wrapper">
    <div class="page-title">
        <span class="title-data" data-main='@(ViewData["Main"])'>@ViewData["Title"]</span>
    </div>
    <div class="card main-card w-100">
            <div class="card-body">
                    <a asp-action="Create" class="btn my_btn btn-clean btn-primary btn-sm ">
                        <i class="fa fa-plus" aria-hidden="true"></i>
                        <span>
                        Create New
                        </span>
                    </a>
                    <div class="table-fix scroll-x">
                        @Html.AntiForgeryToken()

                        <jquery-datatables id="users"
                                           class=" table table-striped table-bordered"
                                           model="@Model"
                                           thead-class="text-center"
                                           enable-searching="true"
                                           search-row-th-class="p-0"
                                           search-input-class="form-control form-control-sm"
                                           search-input-style=""
                                           search-input-placeholder-prefix="Search">
                        </jquery-datatables>
                    </div>
                </div>
    </div>
</div>



@section Scripts{
    <script>


        $( () => {
            var template = "<'d-flex justify-content-between align-items-center my-dt-header 'Bf<'btn-clean'>>" +
                "<'overflow-x slim-scroll-w'tr>" +
                "<'d-flex justify-content-between align-items-center my-dt-footer'lpi>";
            
                
                if ( $( '#users' ).length !== 0 ) {
            
                function loadFinish(data){
                  $(".reload_table i").removeClass("fa-spin")
                }
                $.fn.dataTable.ext.buttons.reload = {
                    text: 'Reload',
                    action: function ( e, dt, node, config ) {
                        $(".reload_table i").addClass("fa-spin")
                        dt.ajax.reload(loadFinish);
                        
                    }
                };
                var table = $( '#users' ).DataTable( {
                    language: {
                        processing: "@_localizer["Loading Data..."]",
                        zeroRecords: "@_localizer["No matching records found"]"
                    },
                    processing: true,
                   serverSide: true,
                   orderCellsTop: true,
                   searching: true,
                   autoWidth: false,
                   deferRender: true,
                   lengthMenu: [10, 50, 100, 1000],
                   order: [[0, "desc"]],
                    dom: template,
                    buttons:[
                            { extend: 'reload', className: 'btn my_btn btn-sm reload_table mx-2', exportOptions: { columns: [$( 'thead th:not(.noexport):not(:empty)' )] }, text: '<i class="fa fa-refresh"></i>' },
                        {
                            extend: 'excelHtml5', footer: true, filename: 'users', className: 'btn my_btn btn-sm', exportOptions: { columns: [$('thead th:not(.noexport):not(:empty)')] }, text: '@_localizer["excel"]',
                            action: function (e, dt, node, config) {
                                window.location.href = "/Users/UsersOnGetExcel?userType=@UserType.Dashboard";
                            },
                            init: function (api, node, config) {
                                $(node).removeClass('dt-button');
                            }

                        },
                        {
                            extend: 'print', footer: true, className: 'btn my_btn btn-sm',
                            exportOptions: {
                                columns: [$('thead th:not(.noexport):not(:empty)')],
                                modifier: {
                                    page: 'current'
                                },
                            },
                            text: '@_localizer["print"]',
                            action: function (e, dt, node, config) {
                                $.ajax({
                                    type: "POST",
                                    url: "/Users/UsersOnGetPrint?userType=@UserType.Dashboard",

                                    success: function (data) {
                                        newPrintBody(data)
                                    }
                                });
                            },
                            init: function (api, node, config) {
                                $(node).removeClass('dt-button');
                            }
                        }
                        
                    ],
                    ajax: {
                        type: "POST",
                        url: '/Users/LoadTable?userType=@UserType.Dashboard',
                        contentType: "application/json; charset=utf-8",
                        async: true,
                        headers: {
                            "XSRF-TOKEN": document.querySelector( '[name="__RequestVerificationToken"]' ).value
                        },
                        data: function ( data ) {
                            let additionalValues = [];
                            data.AdditionalValues = additionalValues;
                            return JSON.stringify( data );
                        }
                    },
                    columns: [
                        {
                            data: "Id",
                            title: "@_localizer["Action"]",
                            render: function (data, type, row) {
                                if ( row["Active"]) {
                                    return `
                                                <div class="dropdown data-table-dropdown">
                                            <button class="btn btn-secondary my_btn btn-sm" data-toggle="dropdown">
                                                <i class="fa fa-cog" aria-hidden="true"></i> @_localizer["Action"]
                                            </button>
                                            <div class="dropdown-menu dropdown-menu-right">
                                                    <a class="dropdown-item text-dark"   href="/Users/Edit/` + data + `"> @_localizer["Edit"] </a>
                                                    <a class="dropdown-item text-dark"   href="/Users/SwitchActivity/` + data + `?userType=` + row["UserType"] + `"> @_localizer["Lock"]  </a>
                                            </div>
                                        </div>`

                                } else {
                                    return `
                                                <div class="dropdown data-table-dropdown">
                                            <button class="btn btn-secondary my_btn btn-sm" data-toggle="dropdown">
                                                <i class="fa fa-cog" aria-hidden="true"></i> @_localizer["Action"]
                                            </button>
                                            <div class="dropdown-menu dropdown-menu-right">
                                                    <a class="dropdown-item text-dark"   href="/Users/Edit/` + data + `"><i class="fa fa-pencil"></i> @_localizer["Edit"] </a>
                                                    <a class="dropdown-item text-dark"   href="/Users/SwitchActivity/` + data + `?userType=` + row["UserType"] + `"> @_localizer["UnLock"] </a>
                                            </div>
                                        </div>`

                                }
                            },
                            name: "co"
                        },                        
                        {
                            data: "Id",
                            name: "eq",
                            visible: false,
                            searchable: false
                        },
                        {
                            data: "FullName",
                            title: "@_localizer["FullName"]",
                            name: "co",
                            searchable: true,
                            render: function (data, type, row) {
                                return `${row["FullName"]}`;
                            },
                        },
                        {
                            data: "Email",
                            title: "@_localizer["Email"]",
                            name: "co"
                        },
                        {
                            data: "Mobile",
                            title: "@_localizer["Mobile"]",
                            name: "co"
                        },
                        {
                            data: "Active",
                            title: "@_localizer["Active"]",
                            name: "co",
                            render: function (data, type, row) {
                                 if (data) {
 
                                     return `@_localizer["Active"]`;
                                 }
                                 else {
                                     return `@_localizer["Not Active"]`;
 
                                 }
                            },
                        },
                        

                    ]
                } );

                table.columns().every( function ( index ) {
                    $( '#users thead tr:last th:eq(' + index + ') input' )
                        .on( 'keyup',
                            function ( e ) {
                                if ( e.keyCode === 13 ) {
                                    table.column( $( this ).parent().index() + ':visible' ).search( this.value ).draw();
                                }
                            } );
                    $( '#users thead tr:last th:eq(' + index + ') input' )
                        .on( 'blur',
                            function () {
                                table.column( $( this ).parent().index() + ':visible' ).search( this.value ).draw();
                            } );
                    if ( $( ".btn.my_btn.btn-clean" ).length > 0 ) {
                        $( "div.btn-clean" ).html( $( ".btn.my_btn.btn-clean" ) );
                    }
                } );
            }
        });

       
    </script>
}